# Default values for prow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
imagePullSecrets: []

restartAllDeploymentsOnChange: false

nameOverride: ""
fullnameOverride: ""

prowjobNamespace: ""
podNamespace: ""

ingress:
  enabled: true
  certmanager:
    enabled: true
    email: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

pluginsFromConfigMap:
  enabled: false
  # will use key 'plugins.yaml'
  name: ""

plugins: {}

configFromConfigMap:
  enabled: false
  # will use key 'config.yaml'
  name: ""
  
config:
  # prowjob_namespace must match installed namespace
  prowjob_namespace: prow
  pod_namespace: prow-test-pods

  managed_webhooks:
    respect_legacy_global_token: true
    org_repo_config:
      USERNAME_HERE/prow-config:
        token_created_after: 2020-06-24T00:10:00Z

  in_repo_config:
    enabled:
      "*": true

  deck:
    spyglass:
      lenses:
        - lens:
            name: metadata
          required_files:
            - started.json|finished.json
        - lens:
            config:
            name: buildlog
          required_files:
            - build-log.txt
        - lens:
            name: junit
          required_files:
            - .*/junit.*\.xml
        - lens:
            name: podinfo
          required_files:
            - podinfo.json

  plank:
    job_url_template: |
        {{if .Spec.Refs}}
          {{if eq .Spec.Refs.Org "kubernetes-security"}}https://console.cloud.google.com/storage/browser/kubernetes-security-prow/{{else}}https://{{ my host here }}/view/gcs/kubernetes-jenkins/{{end}}
        {{else}}https://{{ my host here }}/view/gcs/kubernetes-jenkins/{{end}}
        {{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}
        {{if .Spec.Refs}}
          {{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{if and (eq .Spec.Refs.Org "kubernetes-sigs") (ne .Spec.Refs.Repo "poseidon")}}sigs.k8s.io{{else}}{{.Spec.Refs.Org}}{{end}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/
    report_templates:
      '*': >-
            [Full PR test history](https://{{ my host here }}/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}).
            [Your PR dashboard](https://{{ my host here }}/pr?query=is:pr+state:open+author:{{with
            index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).
    job_url_prefix_config:
      '*': https://{{ my host here }}/view/
    default_decoration_configs:
      "*":
        gcs_configuration:
          bucket: s3://prow-logs
          path_strategy: explicit
        # secret must be set to RELEASE_NAME-s3-credentials
        s3_credentials_secret: prow-s3-credentials
        utility_images:
          clonerefs: gcr.io/k8s-prow/clonerefs:v20201019-3b28521b87
          entrypoint: gcr.io/k8s-prow/entrypoint:v20201019-3b28521b87
          initupload: gcr.io/k8s-prow/initupload:v20201019-3b28521b87
          sidecar: gcr.io/k8s-prow/sidecar:v20201019-3b28521b87

  decorate_all_jobs: true
  periodics:
  - interval: 1m
    agent: kubernetes
    name: echo-test
    decorate: true
    spec:
      containers:
      - image: alpine
        command: ["/bin/date"]

githubFromSecretRef:
  enabled: false
  oauth:
    name: ""
  hmac:
    name: ""
  cookie:
    name: ""
  oauthConfig:
    name: ""

github:
  hmac: ""
  oauth: ""
  cookie: ""
  oauthConfig: ""

hook:
  replicaCount: 1
  bindPort: 8888

  args:
    - --dry-run=false
    - --config-path=/etc/config/config.yaml
    - --github-endpoint=https://api.github.com
    - --github-token-path=/etc/github/oauth
    - --hmac-secret-file=/etc/github/hmac

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  terminationGracePeriodSeconds: 180

  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  image:
    repository: gcr.io/k8s-prow/hook
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8888

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  setupJob:
    enabled: true

    securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}

    extraEnv: []
    extraVolumes: []
    extraVolumeMounts: []

    image:
      repository: gcr.io/k8s-prow/hmac
      pullPolicy: IfNotPresent
      tag: ""

plank:
  replicaCount: 1

  args:
    - --dry-run=false
    - --config-path=/etc/config/config.yaml

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  deploymentStrategy:
    type: Recreate

  image:
    repository: gcr.io/k8s-prow/plank
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v20200820-86c379653b

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

sinker:
  replicaCount: 1

  args:
    - --dry-run=false
    - --config-path=/etc/config/config.yaml

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  deploymentStrategy:
    type: Recreate

  image:
    repository: gcr.io/k8s-prow/sinker
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

horologium:
  replicaCount: 1

  args:
    - --dry-run=false
    - --config-path=/etc/config/config.yaml

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  deploymentStrategy:
    type: Recreate

  image:
    repository: gcr.io/k8s-prow/horologium
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

tide:
  replicaCount: 1

  args:
    - --dry-run=false
    - --config-path=/etc/config/config.yaml
    - --github-token-path=/etc/github/oauth
    - --s3-credentials-file=/etc/s3-credentials/service-account.json

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  terminationGracePeriodSeconds: 180

  deploymentStrategy:
    type: Recreate

  image:
    repository: gcr.io/k8s-prow/tide
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

statusreconciler:
  replicaCount: 1

  args:
    - --dry-run=false
    - --continue-on-error=true
    - --plugin-config=/etc/plugins/plugins.yaml
    - --config-path=/etc/config/config.yaml
    - --github-token-path=/etc/github/oauth
    - --s3-credentials-file=/etc/s3-credentials/service-account.json

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  terminationGracePeriodSeconds: 180

  deploymentStrategy:
    type: Recreate

  image:
    repository: gcr.io/k8s-prow/status-reconciler
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8888

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

deck:
  replicaCount: 2

  bindPort: 8080

  args:
    - --config-path=/etc/config/config.yaml
    - --cookie-secret=/etc/cookie/secret
    - --github-endpoint=https://api.github.com
    - --github-oauth-config-file=/etc/githuboauth/secret
    - --github-token-path=/etc/github/oauth
    - --oauth-url=/github-login
    - --plugin-config=/etc/plugins/plugins.yaml
    - --rerun-creates-job
    - --s3-credentials-file=/etc/s3-credentials/service-account.json
    - --spyglass=true

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  terminationGracePeriodSeconds: 30

  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  image:
    repository: gcr.io/k8s-prow/deck
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

crier:
  replicaCount: 1

  args:
    - --dry-run=false
    - --config-path=/etc/config/config.yaml
    - --github-token-path=/etc/github/oauth
    - --s3-credentials-file=/etc/s3-credentials/service-account.json
    - --blob-storage-workers=10
    - --github-workers=10
    - --kubernetes-blob-storage-workers=10
    - --github-endpoint=https://api.github.com

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  terminationGracePeriodSeconds: 30

  deploymentStrategy:
    type: RollingUpdate

  image:
    repository: gcr.io/k8s-prow/crier
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

statusreconciler:
  replicaCount: 1

  args:
    - --dry-run=false
    - --continue-on-error=true
    - --plugin-config=/etc/plugins/plugins.yaml
    - --config-path=/etc/config/config.yaml
    - --github-token-path=/etc/github/oauth
    - --s3-credentials-file=/etc/s3-credentials/service-account.json

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  terminationGracePeriodSeconds: 180

  deploymentStrategy:
    type: Recreate

  image:
    repository: gcr.io/k8s-prow/status-reconciler
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8888

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

ghproxy:
  replicaCount: 1

  bindPort: 8888

  args:
    - --cache-dir=/cache
    - --cache-sizeGB=99
    - --push-gateway=pushgateway
    - --serve-metrics=true

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  terminationGracePeriodSeconds: 180

  deploymentStrategy:
    type: Recreate

  image:
    repository: gcr.io/k8s-prow/ghproxy
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

minio:
  replicaCount: 1

  bindPort: 9000

  accessKey: prow-minio
  secretKey: prow-minio
  regionName: minio

  args:
    - server
    - /data

  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []

  image:
    repository: minio/minio
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 9000

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  persistentVolumeClaim:
    enabled: false
    name: ""
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 100Gi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
